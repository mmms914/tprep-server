services:
  tprep-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tprep-server
    restart: unless-stopped
    env_file: .env
    environment:
      - APP_ENV=docker
      - MINIO_URI=minio:9000
      - MONGODB_URI=mongodb://mongo:27017
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - mongo
      - minio
    networks:
      - my_network

  mongo:
    image: mongo:8.0.3
    container_name: mongo
    command: --replSet rs0
    restart: unless-stopped
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ${MONGO_DIR}:/data/db
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - ./prometheus_bearer:/etc/prometheus/prometheus_bearer
    ports:
      - "9090:9090"
    networks:
      - my_network
    depends_on:
      - tprep-server

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "13000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - my_network
    depends_on:
      - tprep-server
      - prometheus
  minio:
    image: minio/minio:latest
    container_name: minio
    command: minio server /data --console-address ":9001"
    restart: unless-stopped
    env_file: .env
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - "9001:9001"
    volumes:
      - ${MINIO_DIR}:/data
    networks:
      - my_network

volumes:
  grafana-data:
  prometheus-data:

networks:
  my_network: